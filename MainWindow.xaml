<Window x:Class="SMT.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:SMT"
        xmlns:localEveData="clr-namespace:SMT.EVEData"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:dotNetKitControls="clr-namespace:DotNetKit.Windows.Controls;assembly=DotNetKit.Wpf.AutoCompleteComboBox"
        xmlns:xcad="clr-namespace:AvalonDock;assembly=AvalonDock"
        xmlns:xcadl="clr-namespace:AvalonDock.Layout;assembly=AvalonDock"
        xmlns:xcadt="clr-namespace:AvalonDock.Themes;assembly=AvalonDock.Themes.Expression"
        mc:Ignorable="d"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        Title="SMT" Height="850" Width="1124" Icon="smt_bomb_icon.ico" Loaded="Window_Loaded" ResizeMode="CanResizeWithGrip">

    <Window.Resources>

        <local:ZKBBackgroundConverter x:Key="zkbBGConverter" />

        <ObjectDataProvider x:Key="navigationEnumData" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:RoutingMode" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>


        <DataTemplate DataType="{x:Type localEveData:IntelData}">
            <StackPanel Orientation="Horizontal" Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}},Path=ActualWidth}">
                <TextBlock Text="{Binding Path=IntelTime, StringFormat='HH:mm', FallbackValue='TIME', diag:PresentationTraceSources.TraceLevel=High}" Foreground="Yellow" Padding="0,0,5,0"/>
                <TextBlock Text="{Binding Path=IntelString, FallbackValue='Intel Data'}" Foreground="White" TextWrapping="Wrap"/>
            </StackPanel>
        </DataTemplate>

    </Window.Resources>
    <DockPanel>

        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="Preferences" Click="Preferences_MenuItem_Click"/>
                <MenuItem Header="Exit"/>
            </MenuItem>

            <MenuItem Header="Data">
                <MenuItem Header="Force ESI Update" Click="ForceESIUpdate_MenuItem_Click"/>
            </MenuItem>

        </Menu>
        <StatusBar x:Name="AppStatusBar" DockPanel.Dock="Bottom" Background="{DynamicResource NormalBrush}">
            <StatusBarItem>
                <TextBlock>EVE Time :</TextBlock>
            </StatusBarItem>

            <StatusBarItem>
                <TextBlock Text="{Binding Path=EVEManager.ServerInfo.ServerTime, StringFormat=HH:mm}" Foreground="White" />
            </StatusBarItem>

            <Separator />

            <StatusBarItem>
                <TextBlock>Tranquility Version:</TextBlock>
            </StatusBarItem>

            <StatusBarItem>
                <TextBlock Text="{Binding Path=EVEManager.ServerInfo.ServerVersion, diag:PresentationTraceSources.TraceLevel=High}" Foreground="White"/>
            </StatusBarItem>

            <Separator />

            <StatusBarItem>
                <TextBlock Text="{Binding Path=EVEManager.ServerInfo.NumPlayers, diag:PresentationTraceSources.TraceLevel=High}" Foreground="White"/>
            </StatusBarItem>

            <StatusBarItem >
                <TextBlock Text="Players" />
            </StatusBarItem>
        </StatusBar>
        <xcad:DockingManager x:Name="dockManager" >
            <xcad:DockingManager.Theme>
                <xcadt:ExpressionDarkTheme/>
            </xcad:DockingManager.Theme>

            <xcadl:LayoutRoot>
                <xcadl:LayoutRoot.RootPanel>
                    <xcadl:LayoutPanel>
                        <xcadl:LayoutAnchorablePaneGroup DockWidth="250" DockMinWidth="250" Orientation="Vertical">
                            <xcadl:LayoutAnchorablePane>
                                <xcadl:LayoutAnchorable x:Name="ZKBLayoutAnchorable"  Title="ZKB Feed" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="ZKBContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                    <Grid>
                                        <ScrollViewer>
                                            <StackPanel CanVerticallyScroll="True" ScrollViewer.CanContentScroll="True">
                                                <CheckBox Content="Selected Region Only" x:Name="ZKBFeedFilterViewChk" IsChecked="True" Checked="ZKBFeedFilterViewChk_Checked" Unchecked="ZKBFeedFilterViewChk_Checked" />
                                                <DataGrid x:Name="ZKBFeed" Grid.Row="1" AreRowDetailsFrozen="True" AutoGenerateColumns="False" CanUserAddRows="False" MouseDoubleClick="ZKBFeed_MouseDoubleClick_1"   >
                                                    <DataGrid.Columns>
                                                        <DataGridTextColumn Header="System" Binding="{Binding SystemName}" Width="30*" IsReadOnly="True" CanUserReorder="False" CanUserSort="False" />
                                                        <DataGridTextColumn Header="Alliance" Binding="{Binding VictimAllianceName}" Width="40*" IsReadOnly="True" CanUserReorder="False" CanUserSort="False" />
                                                        <DataGridTextColumn Header="Ship Type" Binding="{Binding ShipType}" Width="30*" IsReadOnly="True" CanUserReorder="False" CanUserSort="False" />
                                                    </DataGrid.Columns>
                                                    <DataGrid.RowStyle>
                                                        <Style TargetType="DataGridRow">
                                                            <Style.Setters>
                                                                <Setter Property="Background">
                                                                    <Setter.Value>
                                                                        <Binding Converter="{StaticResource zkbBGConverter}" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style.Setters>
                                                        </Style>
                                                    </DataGrid.RowStyle>

                                                    <DataGrid.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="Show System" Click="ZKBContexMenu_ShowSystem_Click" />
                                                            <MenuItem Header="Open Kill on ZKB" Click="ZKBContexMenu_ShowZKB_Click" />
                                                        </ContextMenu>
                                                    </DataGrid.ContextMenu>
                                                </DataGrid>
                                            </StackPanel>
                                        </ScrollViewer>
                                    </Grid>
                                </xcadl:LayoutAnchorable>
                                <xcadl:LayoutAnchorable x:Name="IntelLayoutAnchorable"  Title="Intel" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="IntelContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="25" />
                                        </Grid.RowDefinitions>
                                        <ListView x:Name="RawIntelBox" Margin="0,2" MouseDoubleClick="RawIntelBox_MouseDoubleClick" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.Row="0">
                                            <ListView.ItemTemplate>
                                                <DataTemplate >
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="{Binding Path=IntelTime, StringFormat='HH:mm', FallbackValue='TIME', diag:PresentationTraceSources.TraceLevel=High}" Foreground="Red" Padding="0,0,5,0"/>
                                                        <TextBlock Text="{Binding Path=IntelString, FallbackValue='Intel Data'}" Foreground="White" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>
                                        <Button Content="Clear Intel" Grid.Row="1" x:Name="ClearIntelBtn" Click="ClearIntelBtn_Click" />
                                    </Grid>
                                </xcadl:LayoutAnchorable>
                            </xcadl:LayoutAnchorablePane>
                        </xcadl:LayoutAnchorablePaneGroup>

                        <xcadl:LayoutDocumentPane ShowHeader="True" AllowDuplicateContent="False">
                            <xcadl:LayoutDocument CanClose="False" CanFloat="True" ContentId="UniverseContentID" Title="Regions">
                                <Grid x:Name="MainUniverseGrid"  ClipToBounds="True" Grid.Row="1">
                                    <Popup x:Name="RegionCharacterInfo" IsOpen="False" AllowsTransparency="True">
                                        <StackPanel x:Name="RegionCharacterInfoSP" />
                                    </Popup>
                                    <Popup x:Name="RegionTheraInfo" IsOpen="False" AllowsTransparency="True">
                                        <StackPanel x:Name="RegionTheraInfoSP" />
                                    </Popup>

                                    <Viewbox HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Canvas x:Name="MainUniverseCanvas"   Margin="5" Width="1050" Height="800" HorizontalAlignment="Stretch">
                                        </Canvas>
                                    </Viewbox>
                                    <Border BorderThickness="2" BorderBrush="Black" Background="#FF232223" Width="135" Height="65" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,20,20" CornerRadius="4" Panel.ZIndex="111">
                                        <Canvas x:Name="RegionsToolBoxCanvas">
                                            <Grid Canvas.Left="0" Canvas.Top="2" >

                                                <StackPanel Orientation="Vertical" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,0,0,0" >

                                                    <StackPanel Orientation="Horizontal" Margin="1,1" HorizontalAlignment="Center" VerticalAlignment="Center">

                                                        <ToggleButton x:Name="ToggleStandingsBtn" Margin="1,0" Background="{x:Null}" BorderThickness="0" IsChecked="{Binding Path=MapConf.ShowRegionStandings}" ToolTip="Show Region Standings" Width="30" Height="30"  >
                                                            <ToggleButton.Style>
                                                                <Style TargetType="{x:Type ToggleButton}">
                                                                    <Setter Property="Background">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush Color="Transparent" >
                                                                            </SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </ToggleButton.Style>
                                                            <Image>
                                                                <Image.Style>
                                                                    <Style TargetType="Image">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding ElementName=ToggleStandingsBtn,Path=IsChecked}" Value="True">
                                                                                <Setter Property="Image.Source" Value="Images/Standings.png" />
                                                                            </DataTrigger>

                                                                            <DataTrigger Binding="{Binding ElementName=ToggleStandingsBtn,Path=IsChecked}" Value="false">
                                                                                <Setter Property="Image.Source" Value="Images/Standings Inactive.png" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Image.Style>
                                                            </Image>
                                                        </ToggleButton>

                                                        <ToggleButton x:Name="TogglePodKillsBtn" Margin="1,0" Background="{x:Null}" BorderThickness="0" IsChecked="{Binding Path=MapConf.ShowUniversePods}" ToolTip="Pod kills in the Last hour" Width="30" Height="30">
                                                            <ToggleButton.Style>
                                                                <Style TargetType="{x:Type ToggleButton}">
                                                                    <Setter Property="Background">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush Color="Transparent" >
                                                                            </SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </ToggleButton.Style>
                                                            <Image>
                                                                <Image.Style>
                                                                    <Style TargetType="Image">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding ElementName=TogglePodKillsBtn,Path=IsChecked}" Value="True">
                                                                                <Setter Property="Image.Source" Value="Images/Pod.png" />
                                                                            </DataTrigger>

                                                                            <DataTrigger Binding="{Binding ElementName=TogglePodKillsBtn,Path=IsChecked}" Value="false">
                                                                                <Setter Property="Image.Source" Value="Images/Pod Inactive.png" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Image.Style>
                                                            </Image>
                                                        </ToggleButton>

                                                        <ToggleButton x:Name="ToggleShipKillsBtn" Margin="1,0" Background="{x:Null}" BorderThickness="0" BorderBrush="Transparent" Foreground="Transparent" IsChecked="{Binding Path=MapConf.ShowUniverseKills}" ToolTip="Ship kill in the Last hour" Width="30" Height="30" >
                                                            <ToggleButton.Style>
                                                                <Style TargetType="{x:Type ToggleButton}">
                                                                    <Setter Property="Background">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush Color="Transparent" >
                                                                            </SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </ToggleButton.Style>
                                                            <Image>
                                                                <Image.Style>
                                                                    <Style TargetType="Image">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding ElementName=ToggleShipKillsBtn,Path=IsChecked}" Value="True">
                                                                                <Setter Property="Image.Source" Value="Images/Ship.png" />
                                                                            </DataTrigger>

                                                                            <DataTrigger Binding="{Binding ElementName=ToggleShipKillsBtn,Path=IsChecked}" Value="false">
                                                                                <Setter Property="Image.Source" Value="Images/Ship Inactive.png" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Image.Style>
                                                            </Image>
                                                        </ToggleButton>

                                                        <ToggleButton x:Name="ToggleRatKillsBtn" Margin="1,0" Background="{x:Null}" BorderThickness="0" IsChecked="{Binding Path=MapConf.ShowUniverseRats}" ToolTip="NPC Kills in the Last hour" Width="30" Height="30">
                                                            <ToggleButton.Style>
                                                                <Style TargetType="{x:Type ToggleButton}">
                                                                    <Setter Property="Background">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush Color="Transparent" >
                                                                            </SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </ToggleButton.Style>
                                                            <Image>
                                                                <Image.Style>
                                                                    <Style TargetType="Image">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding ElementName=ToggleRatKillsBtn,Path=IsChecked}" Value="True">
                                                                                <Setter Property="Image.Source" Value="Images/Rat.png" />
                                                                            </DataTrigger>

                                                                            <DataTrigger Binding="{Binding ElementName=ToggleRatKillsBtn,Path=IsChecked}" Value="false">
                                                                                <Setter Property="Image.Source" Value="Images/Rat Inactive.png" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Image.Style>
                                                            </Image>
                                                        </ToggleButton>
                                                    </StackPanel>

                                                    <Slider  Width="130" Cursor="Arrow" Margin="0" Value="{Binding MapConf.UniverseDataScale}" Minimum="0.1" Maximum="5" TickFrequency="0.1" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Foreground="{x:Null}" BorderBrush="{x:Null}" Background="{x:Null}" Height="19" ToolTip="Overlay/Data Scale" TickPlacement="Both" SmallChange="0.2" IsSnapToTickEnabled="True" />
                                                </StackPanel>
                                            </Grid>
                                        </Canvas>
                                    </Border>

                                </Grid>
                            </xcadl:LayoutDocument>

                            <xcadl:LayoutDocument CanClose="False" CanFloat="True" ContentId="MapRegionContentID" Title="Region">
                                <local:RegionControl x:Name="RegionRC" />
                            </xcadl:LayoutDocument>

                            <xcadl:LayoutDocument CanClose="False" CanFloat="True" ContentId="FullUniverseViewID" Title="Universe">
                                <local:UniverseControl x:Name="UniverseUC" />
                            </xcadl:LayoutDocument>
                        </xcadl:LayoutDocumentPane>
                    </xcadl:LayoutPanel>
                </xcadl:LayoutRoot.RootPanel>

                <xcadl:LayoutRoot.RightSide>
                    <xcadl:LayoutAnchorSide>
                        <xcadl:LayoutAnchorGroup>

                            <xcadl:LayoutAnchorable Title="Anoms" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="AnomsContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <Grid x:Name="MainAnomGrid"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="60" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="26" />
                                    </Grid.RowDefinitions>
                                    <StackPanel Grid.Row="0">
                                        <Button x:Name="btnClearAnomList" Content="Clear" Click="btnClearAnomList_Click" />
                                        <Label Content="{Binding Path=ANOMManager.ActiveSystem.SystemName}" FontSize="18" FontWeight="Bold" />
                                    </StackPanel>

                                    <DataGrid  x:Name="AnomSigList" Grid.Row="1" AreRowDetailsFrozen="True" AutoGenerateColumns="False" ItemsSource="{Binding Path=ANOMManager.ActiveSystem.Anoms.Values}">

                                        <DataGrid.RowStyle>
                                            <Style TargetType="DataGridRow">

                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Type}" Value="Unknown">
                                                        <Setter Property="Background" Value="Red"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding State}" Value="State2">
                                                        <Setter Property="Background" Value="Green"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGrid.RowStyle>

                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="SIG" Binding="{Binding Signature}" Width="*" />

                                            <DataGridTextColumn Header="Type" Binding="{Binding Type}" Width="*" />
                                            <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                    <StackPanel Grid.Row="2">
                                        <Button x:Name="btnUpdateAnomList" Content="Update from Clipboard" Click="btnUpdateAnomList_Click" />
                                    </StackPanel>
                                </Grid>
                            </xcadl:LayoutAnchorable>

                            <xcadl:LayoutAnchorable Title="Map Colours" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="MapColoursContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <ScrollViewer >
                                    <StackPanel>
                                        <xctk:PropertyGrid x:Name="ColoursPropertyGrid" AutoGenerateProperties="True" ShowSearchBox="False" ShowSortOptions="False" ShowTitle="False" ShowSummary="False" />
                                        <Separator />
                                        <Button x:Name="ResetColourData" Click="ResetColourData_Click" Content="Reset Colours" Margin="0,2" />
                                    </StackPanel>
                                </ScrollViewer>
                            </xcadl:LayoutAnchorable>

                            <xcadl:LayoutAnchorable Title="Characters" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="CharactersContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <ScrollViewer >
                                    <StackPanel>
                                        <DataGrid  x:Name="CharactersList" Grid.Row="1" AreRowDetailsFrozen="True" AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="True" MouseDoubleClick="CharactersList_MouseDoubleClick">

                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="Name" Binding="{Binding Name}" CanUserReorder="False" Width="*" />
                                                <DataGridTextColumn Header="Location" Binding="{Binding Location}" CanUserReorder="False" Width="*" />
                                                <DataGridTextColumn Header="Region" Binding="{Binding Region}" CanUserReorder="False" Width="*" />
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <Button x:Name="btn_AddCharacter" Click="btn_AddCharacter_Click" Content="Add Character" />
                                    </StackPanel>
                                </ScrollViewer>
                            </xcadl:LayoutAnchorable>

                            <xcadl:LayoutAnchorable Title="Jump Bridges" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="JumpBridgesContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <Grid x:Name="JumpBridgeGrid">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="2">
                                        <Label Content="Gate SearchFilter : " />
                                        <TextBox x:Name="GateSearchFilter" Text=" » " Width="167" />
                                    </StackPanel>
                                    <Button x:Name="ImportJumpGatesBtn" Content="Find Gates" Click="ImportJumpGatesBtn_Click" Margin="2" Grid.Row="1" />
                                    <Button x:Name="ClearJumpGatesBtn" Content="Clear Gates" Click="ClearJumpGatesBtn_Click" Margin="2" Grid.Row="2" />
                                    <Button x:Name="ImportPasteJumpGatesBtn" Content="Import from Clipboard" Click="ImportPasteJumpGatesBtn_Click" Margin="2" Grid.Row="3" />

                                    <Label Content="Ansiblex Gates" Margin="2" Grid.Row="4" />
                                    <ListBox x:Name="JumpBridgeList" Margin="2" Grid.Row="5" />
                                </Grid>
                            </xcadl:LayoutAnchorable>

                            <xcadl:LayoutAnchorable Title="Route" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="RouteContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <Grid x:Name="MainRouteGrid">
                                    <ScrollViewer>
                                        <StackPanel>

                                            <GroupBox Header="Navigation Options">
                                                <StackPanel Margin="4">
                                                    <StackPanel Orientation="Horizontal">
                                                        <Label Content="Mode"/>
                                                        <ComboBox ItemsSource="{Binding Source={StaticResource navigationEnumData}}" SelectedItem="{Binding ElementName=RegionRC, Path=ActiveCharacter.NavigationMode}" Margin="2" Width="150"/>
                                                    </StackPanel>

                                                    <CheckBox Content="Use Ansiblex Gates" IsChecked="{Binding ElementName=RegionRC, Path=ActiveCharacter.UseAnsiblexGates}" Margin="2"/>

                                                </StackPanel>
                                            </GroupBox>
                                            <GroupBox Header="WayPoints">
                                                <StackPanel Margin="4">
                                                    <ListBox ItemsSource="{Binding ElementName=RegionRC, Path=ActiveCharacter.Waypoints}" MinHeight="50" Margin="2"/>
                                                    <StackPanel Orientation="Horizontal" Margin="2">
                                                        <dotNetKitControls:AutoCompleteComboBox x:Name="RouteSystemDropDownAC" FontSize="12" Width="156" SelectionChanged="RouteSystemDropDownAC_SelectionChanged"/>
                                                        <Button x:Name="AddWaypointsBtn" Click="AddWaypointsBtn_Click"  Content="Add WayPoint" Margin="2" />
                                                    </StackPanel>

                                                    <Button x:Name="ClearWaypointsBtn" Click="ClearWaypointsBtn_Click" Content="Clear All" Margin="2"/>

                                                </StackPanel>
                                            </GroupBox>

                                            <GroupBox Header="Route">
                                                <StackPanel Margin="4">
                                                    <ListBox ItemsSource="{Binding ElementName=RegionRC, Path=ActiveCharacter.ActiveRoute}" MinHeight="50"/>

                                                    <StackPanel Orientation="Horizontal" Margin="2">
                                                        <Label Content="Total number of jumps : "/>
                                                        <Label Content="{Binding ElementName=RegionRC, Path=ActiveCharacter.ActiveRoute.Count}"/>
                                                    </StackPanel>
                                                    <Button x:Name="CopyRouteBtn" Click="CopyRouteBtn_Click" Content="Copy Route" Margin="2" />
                                                </StackPanel>
                                            </GroupBox>
                                        </StackPanel>
                                    </ScrollViewer>
                                </Grid>
                            </xcadl:LayoutAnchorable>

                            <!--   Temp Disabled   <xcadl:LayoutAnchorable Title="Jump Planner" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="JumpPlannerContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                    <Grid x:Name="JumpPlannerGrid">
                                        <ScrollViewer Background="#FFE5E5E5">
                                            <StackPanel>
                                                <Label Content="Jump Planner Options" />
                                                <ComboBox x:Name="JPShipType" />
                                                <CheckBox x:Name="JPUseGates" Content="Use Gates" />

                                                <Button x:Name="JPSuggestRoute" Click="JPSuggestRoute_Click" Content="Suggest Route" />
                                                <ListBox x:Name="JPSuggestedRoute" />
                                            </StackPanel>
                                        </ScrollViewer>
                                    </Grid>
                                </xcadl:LayoutAnchorable>
-->

                            <xcadl:LayoutAnchorable Title="Thera" CanClose="False" CanAutoHide="True" CanHide="false" ContentId="TheraContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <ScrollViewer>
                                    <StackPanel>

                                        <DataGrid  x:Name="TheraConnectionsList" Grid.Row="1" AreRowDetailsFrozen="True" AutoGenerateColumns="False" IsReadOnly="True" MouseDoubleClick="TheraConnectionsList_MouseDoubleClick">

                                            <DataGrid.RowStyle>
                                                <Style TargetType="DataGridRow">

                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding EstimatedEOL}" Value="critical">
                                                            <Setter Property="Background" Value="Red" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGrid.RowStyle>

                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="System" Binding="{Binding System}" Width="*" />
                                                <DataGridTextColumn Header="Region" Binding="{Binding Region}" Width="*" />
                                                <DataGridTextColumn Header="In Sig" Binding="{Binding InSignatureID}" Width="*" />
                                                <DataGridTextColumn Header="Out Sig" Binding="{Binding OutSignatureID}" Width="*" />
                                                <DataGridTextColumn Header="EOL Status" Binding="{Binding EstimatedEOL}" Width="*" />
                                            </DataGrid.Columns>
                                        </DataGrid>

                                        <Button x:Name="btn_UpdateThera" Click="btn_UpdateThera_Click"  Content="Update Connections" />
                                    </StackPanel>
                                </ScrollViewer>
                            </xcadl:LayoutAnchorable>
                        </xcadl:LayoutAnchorGroup>
                    </xcadl:LayoutAnchorSide>
                </xcadl:LayoutRoot.RightSide>
            </xcadl:LayoutRoot>
        </xcad:DockingManager>






    </DockPanel>
</Window>